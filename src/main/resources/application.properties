# Application Configuration
spring.application.name=WeatherApp
server.port=8080

# OpenWeather API Configuration
openweather.api.key=38b64d931ea106a38a71f9ec1643ba9d
openweather.api.base-url=https://api.openweathermap.org/data/2.5


# MongoDB Configuration
spring.data.mongodb.host=mongodb://localhost:27017/weatherapp
spring.data.mongodb.port=27017
spring.data.mongodb.database=weatherapp
spring.data.mongodb.username=
spring.data.mongodb.password=
spring.data.mongodb.authentication-database=admin

# For MongoDB Atlas (Cloud), use URI instead:
# spring.data.mongodb.uri=mongodb+srv://username:password@cluster.mongodb.net/weatherapp?retryWrites=true&w=majority

# CORS Configuration
app.cors.allowed-origins=http://localhost:8080,http://localhost:3000,http://127.0.0.1:8080

# Logging Configuration
logging.level.com.weatherapp=DEBUG
logging.level.org.springframework.data.mongodb=DEBUG
logging.level.org.springframework.web=INFO

# Jackson Configuration
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

# Web Configuration
spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/static/**

# Management and Actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# Application Info
info.app.name=Weather App
info.app.description=Comprehensive Weather Application with MongoDB
info.app.version=1.0.0

# Cache Configuration (Optional - for API response caching)
spring.cache.type=simple
spring.cache.cache-names=weather-cache,forecast-cache,air-quality-cache

# HTTP Client Configuration
spring.http.client.connection-timeout=5000
spring.http.client.read-timeout=10000

# Error Handling
server.error.include-message=always
server.error.include-binding-errors=always

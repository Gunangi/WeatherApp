plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Configuration processor for application properties
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Jackson for JSON processing (included in web starter but explicit for clarity)
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // HTTP Client (RestTemplate is included in spring-web)
    implementation 'org.springframework:spring-web'

    // MongoDB driver (included in spring-data-mongodb but explicit for version control)
    implementation 'org.mongodb:mongodb-driver-sync'

    // Optional: For better date/time handling
    implementation 'org.springframework.boot:spring-boot-starter-json'

    // Development dependencies
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'

    // Optional: For API documentation (if needed in future)
    // implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Optional: For security (if authentication is added later)
    // implementation 'org.springframework.boot:spring-boot-starter-security'

    // Optional: For caching (if needed for weather data caching)
    // implementation 'org.springframework.boot:spring-boot-starter-cache'
    // implementation 'com.github.ben-manes.caffeine:caffeine'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Optional: Configure the JAR file
jar {
    enabled = false
    archiveClassifier = ''
}

// Optional: Configure the Spring Boot JAR
bootJar {
    archiveFileName = 'weather-app.jar'
    mainClass = 'com.example.weatherapp.WeatherAppApplication'
}

// Optional: Configure JVM arguments for development
bootRun {
    jvmArgs = [
            '-Dspring.profiles.active=dev',
            '-Dserver.port=8080'
    ]
}